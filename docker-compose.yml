version: "3"

services:
  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    env_file:
      - backend/.env
    entrypoint:
      - node
      - src/index
      - --config=./.config.js
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
      args:
        PUBLIC_PATH: "${FRONTEND_PUBLIC_PATH}"
        AUTH_PATH: "${FRONTEND_AUTH_PATH}"
    env_file:
      - .env
    ports:
      - "${FRONTEND_PUBLIC_PORT}:80"
    networks:
      - default
    depends_on:
      - backend

  database:
    image: "mongo"
    volumes:
      - database_mongo:/data/db
    restart: unless-stopped
    networks:
      - default

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default

  promtail:
    build:
      context: ./promtail/
      dockerfile: Dockerfile
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=123qwe
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - default

  vector:
    build:
      context: ./vector/
      dockerfile: Dockerfile
    networks:
      - default

volumes:
  database_mongo:
  grafana_data:

networks:
  default: