version: "3"

services:
  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    env_file:
      - backend/.env
    entrypoint:
      - node
      - backend/src/index
      - --config=./backend/.config.js
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
      args:
        PUBLIC_PATH: "${PUBLIC_PATH}"
        AUTH_PATH: "${AUTH_PATH}"
    env_file:
      - .env
    ports:
      - "${PUBLIC_PORT}:80"
    networks:
      - default
    depends_on:
      - backend
      - vector

  database:
    image: "mongo"
    volumes:
      - database_mongo:/data/db
    restart: unless-stopped
    networks:
      - default

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - default

  grafana:
    build:
      context: ./grafana/
      dockerfile: Dockerfile
    command: --config=/etc/grafana/custom.ini
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - .env
    networks:
      - default

  vector:
    build:
      context: ./vector/
      dockerfile: Dockerfile
    networks:
      - default

  prometheus:
    build:
      context: ./prometheus/
      dockerfile: Dockerfile
    command: --config.file=/etc/prometheus/prometheus.yml
    networks:
      - default

  prom_aggregation_gateway:
    image: weaveworks/prom-aggregation-gateway:latest
    networks:
      - default

volumes:
  database_mongo:
  grafana_data:

networks:
  default: